{"name":"Sdkcheck","tagline":"-- A utility that answers the question: is my user running on at least this SDK?","body":"# sdkcheck\r\nWhat version is your user running?\r\n\r\nReplaces checks like: \r\n\r\n```java\r\nif(android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP){\r\n  ...\r\n}\r\n```\r\n\r\nwith:\r\n\r\n```java\r\nif(Sdk.isAtLeastLollipop()){\r\n  ...\r\n}\r\n```\r\n\r\n# Examples:\r\n\r\n```java\r\npublic void example(){\r\n        if(Sdk.isAtLeastMarshmallow()){\r\n            System.out.println(\"I'm fluffy\");\r\n        } else if(Sdk.isAtLeastLollipop()){\r\n            System.out.println(\"I'm sticky\");\r\n        } else if(Sdk.isAtLeastKitKat()){\r\n            System.out.println(\"I'm crunchy\");\r\n        }\r\n}\r\n```\r\n\r\nNon-static variant (more test-friendly):\r\n```java\r\npublic void example(){\r\n        Sdk sdk = new SdkImpl();\r\n        if(sdk.isAtLeastMarshmallow()){\r\n            System.out.println(\"I'm fluffy\");\r\n        } else if(sdk.isAtLeastLollipop()){\r\n            System.out.println(\"I'm sticky\");\r\n        } else if(sdk.isAtLeastKitKat()){\r\n            System.out.println(\"I'm crunchy\");\r\n        }\r\n}\r\n```\r\n\r\n#Download\r\n\r\n```\r\ncompile 'com.github.akodiakson:sdkcheck:0.2.1'\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}